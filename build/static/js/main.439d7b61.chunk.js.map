{"version":3,"sources":["firebase/index.js","firebase/config.js","components/signin.jsx","components/header.jsx","components/footer.jsx","main/api.js","components/main.jsx","main/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","functions","Timestamp","uiConfig","signInFlow","signInOptions","provider","EmailAuthProvider","PROVIDER_ID","requireDisplayName","SignIn","firebaseAuth","Header","className","Footer","href","target","TwitterIcon","size","round","EmailIcon","a","fetch","res","json","user_id","Card","props","background","array","sub","style","margin","backgroundColor","url","contest","title","diff","class","user","type","value","onClick","deleteTask","id","ProblemSet","map","key","Form","useState","problemUrl","setProblemUrl","problems","setProblems","userName_tmp","userName","addProblem","event","tmp","slice","length","urlsplit","split","problem_Id_tmp","contest_tmp","Name_tmp","diff_tmp","sub_tmp","fetchPromInfo","then","url1s","fetchPromDiff","url2","fetchUesrsSub","url3","problem_id","result","problem_Obj","Math","max","unshift","alert","useEffect","collection","doc","uid","get","exists","dbData","data","console","log","set","catch","error","placeholder","onChange","onKeyPress","splice","Main","setUserName","localStorage","userName_localst","JSON","parse","userform","setItem","stringify","role","aria-label","e","Contents","App","loading","setloading","usercur","setusercur","unregisterAuthObserver","onAuthStateChanged","render","document","querySelector"],"mappings":"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","file":"static/js/main.439d7b61.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firebase-firestore'\nimport 'firebase/firebase-functions'\nimport {firebaseConfig} from \"./config\";\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const functions = firebase.functions();\nexport const Firebasestamp = firebase.firestore.Timestamp;\n\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyB3hZLlsHCeIn_P4kOUJEPTTurPG9uq_JQ\",\n    authDomain: \"atcoderreminderv2.firebaseapp.com\",\n    databaseURL: \"https://atcoderreminderv2-default-rtdb.firebaseio.com\",\n    projectId: \"atcoderreminderv2\",\n    storageBucket: \"atcoderreminderv2.appspot.com\",\n    messagingSenderId: \"717880908898\",\n    appId: \"1:717880908898:web:94c8dc7c05861f291c053b\",\n    measurementId: \"G-1FRW7Q8DGS\"\n  };\n\n","import React, { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport {auth} from '../firebase/index.js';\nimport firebase from 'firebase';\n\n// Configure FirebaseUI.\nconst uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    signInOptions: [\n      {\n        provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        requireDisplayName: false\n      },\n    ],\n};\n\nfunction SignIn() {\n    return(\n        <div>\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n        </div>\n    );\n\n}\n\nexport default SignIn\n","function Header() {\n    return(\n        <div>\n            <header className=\"hero is-success is-bold\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title is-3\">\n                        AtCoder Reminder\n                     </h1>\n                 </div>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default Header;","import {\n    EmailIcon,\n    TwitterIcon\n} from 'react-share';\n\nfunction Footer() {\n    return(\n    <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n            <hr></hr>\n                <p>2021&copy;kumastry</p>\n              \n                \n     \n                <div className=\"columns  is-centered\">\n                    <div className=\"column  is-narrow  \">\n                        <a href=\"https://twitter.com/kumastry1\" target=\"_black\"><TwitterIcon size={48} round /></a>\n                    </div>\n                    \n                    <div className=\"column  is-narrow\">\n                        <a href=\"mailto:kumastry2212@gmail.com\"><EmailIcon size={48} round /></a>\n                    </div>\n                </div>\n        </div>\n    </footer>\n    );\n}\n\nexport default Footer;","export async function fetchPromInfo() {\n    const res = await fetch(\n        `https://kenkoooo.com/atcoder/resources/problems.json`\n    );\n\n    return await res.json();\n}\n\nexport async function fetchPromDiff() {\n    const res =  await fetch(\n        `https://kenkoooo.com/atcoder/resources/problem-models.json`\n    );\n\n    return await res.json();\n}\n\nexport async function fetchUesrsSub(user_id) {\n    const res = await fetch(\n        `https://kenkoooo.com/atcoder/atcoder-api/results?user=${user_id}`\n    );\n    return await res.json();\n}\n","import {useEffect, useState} from 'react';\nimport {fetchPromDiff, fetchPromInfo, fetchUesrsSub} from '../main/api';\nimport { db } from '../firebase';\n\nfunction Card(props) {\n  \n    let background = '';\n    \n    if(props.array.sub === 'AC') {\n        background= \"#c8e4cc\";\n    } else if (props.array.sub !== 'nosub'){\n        background=\"#fcecbc\";\n    } else {\n        background=\"#ffffff\";\n    }\n\n\n    return(\n        <div className=\"card\" style={{ margin: \"8px\", backgroundColor:background,}}>\n            <div className=\"card-content\" >\n                <p className=\"title\">\n                    <a href = {props.array.url} target=\"_black\">\n\n                        {props.array.contest + \" \" +props.array.title}<br/>\n                        { \"diff:\" + props.array.diff + \" submission:\" + props.array.sub}<br/>\n                    </a>\n                </p>\n\n                <p class=\"subtitle\">\n                    user:{props.array.user}\n                </p>\n\n                <footer className=\"card-footer\">\n                    {/* <input  type = \"button\" value = \"edit\" className=\"card-footer-item\" onClick ={() => props.editTask(key)}/> */}  \n                    <input  type = \"button\" value = \"delete\" className=\"card-footer-item\" onClick={() => props.deleteTask(props.id)} />\n                </footer>\n            </div>\n        </div>\n    );\n}\n\nfunction ProblemSet(props) {\n\n    return (\n        <div>\n            <div className=\"is-vertical-center\" >       \n                {props.array.map( (array, key) => {\n                    return <Card array={array} id ={key} deleteTask={props.deleteTask} />\n                })}\n            </div>\n        </div>        \n    );\n}\n\nfunction Form(props) {\n    const [problemUrl, setProblemUrl] = useState('');\n    const [problems, setProblems] = useState([]);\n    let userName_tmp = props.userName;\n\n    useEffect (() => {\n        const dataref = db.collection('problems').doc(props.uid);\n        dataref.get().then((doc) => {\n            if(doc.exists) {\n                const dbData = doc.data();\n                console.log(dbData.problems);\n                setProblems(dbData.problems);\n            } else {\n                console.log(\"no data\");\n            }\n        });\n    },[])\n\n    useEffect (() => {\n        \n            db.collection(\"problems\").doc(props.uid).set({problems})\n            .then(() => {\n                console.log(problems);\n                console.log(\"Document written \");\n            })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n            });\n       \n    },[problems])\n\n    function handleChange(event) {\n        setProblemUrl(event.target.value);\n    }\n\n    function addProblem(event) {\n        let tmp = problems.slice(0, problems.length);\n        const urlsplit = problemUrl.split('/');\n        const problem_Id_tmp = urlsplit[urlsplit.length-1];\n        const contest_tmp = urlsplit[urlsplit.length-3];\n        let Name_tmp = '';\n        let diff_tmp = 0;\n        let sub_tmp = 'nosub';\n\n        fetchPromInfo().then((url1s) => {\n\n            url1s.map((url1s) => {\n                if(url1s.id === problem_Id_tmp) {\n                    Name_tmp = url1s.title;\n                }\n            });\n\n        }).then(() => {\n\n            if(Name_tmp !== '') {\n                fetchPromDiff().then((url2) => {\n                    diff_tmp = typeof(url2[problem_Id_tmp]) === 'undefined'?0:url2[problem_Id_tmp]['difficulty'];\n                } ).then(() => {\n                    fetchUesrsSub(userName_tmp).then((url3) => {\n                        url3.map((url3) => {\n                          \n                            if(url3.problem_id === problem_Id_tmp) {\n                                if(sub_tmp === 'nosub') {\n                                    sub_tmp = url3.result;\n                                } else if(sub_tmp !== 'AC' && url3.result === 'AC') {\n                                    sub_tmp = url3.result;\n                                } else if(sub_tmp !== 'AC') {\n                                    if(sub_tmp !== 'WA' && url3.result === 'WA') {\n                                        sub_tmp = url3.result;\n                                    } else if(sub_tmp !== 'TLE' && url3.result === 'TLE') {\n                                        sub_tmp = url3.result;\n                                    } else {\n                                        sub_tmp = url3.result;\n                                    }\n                                }\n                            }\n                        });\n\n                    }).then(() => {\n\n                        let userName_tmp = props.userName ===''?'no user':props.userName;\n                        const problem_Obj = {\n                            title:Name_tmp,\n                            url:problemUrl,\n                            diff:Math.max(diff_tmp, 0),\n                            problem_id:problem_Id_tmp,\n                            contest:contest_tmp,\n                            sub:sub_tmp,\n                            user:userName_tmp\n                        };\n\n                        tmp.unshift(problem_Obj);\n                        setProblems(tmp);\n                        \n                    });\n                });\n            } else {\n                alert(\"Problem Not Found\");\n            }\n        });\n\n        setProblemUrl('');\n    }\n\n    function handlePress(event) {\n        if(event.key === 'Enter') {\n            addProblem();\n        }\n    }\n\n    \n    function deleteTask(key) {\n        let tmp = problems.slice(0, problems.length);\n        tmp.splice(key, 1);\n        setProblems(tmp);\n    }\n\n    return(\n        <div>\n            <main>\n            <section className=\"section\">\n                <input className=\"input\" type=\"text\" placeholder=\"Problem URL\" value = {problemUrl} onChange={handleChange} onKeyPress={handlePress} />\n                <button className=\"button is-fullwidth is-success is-light\" onClick={addProblem}>Add Problem</button>\n                <section className=\"section\">\n                    <ProblemSet array={problems} deleteTask={deleteTask}/>\n                </section>\n            </section>\n            </main>\n        </div>\n    );\n}\n\nfunction Main(props) {\n    const [userName, setUserName] = useState('');\n\n    useEffect(() => {\n        if(localStorage.user) {\n            const userName_localst = JSON.parse(localStorage.user);\n            userform.value = userName_localst;\n            setUserName(userName_localst);\n        }\n    }, [])\n\n    useEffect (() => {\n        localStorage.setItem('user', JSON.stringify(userName));\n    },[userName])\n\n    return (\n        <div>\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main nabigation\">\n                <div className=\"navbar-brand\">\n                    <input className=\"navbar-item\" id = 'userform' value = {userName} onChange={e => setUserName(e.target.value)} type=\"text\" placeholder=\"Username\"></input>\n                </div>\n            </nav>\n            <Form userName = {userName} uid = {props.uid}/>\n        </div>\n    );\n}\n\n\nexport default Main;\n\n","import {useEffect, useState} from 'react';\nimport SignIn from '../components/signin';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport Main from '../components/main';\nimport { auth, db } from '../firebase';\n\n\n\nfunction Contents(props) {\n    return(\n        <>\n        <Header />\n        <Main uid={props.uid}/>\n        <Footer />\n        </>\n    );\n}\n\nfunction App() {\n    const [loading, setloading] = useState(true);\n    const [usercur, setusercur] = useState(null);\n\n    useEffect(() => {\n        const unregisterAuthObserver = auth.onAuthStateChanged(user => {\n            setloading(false);\n            setusercur(user);\n            console.log(user.uid);\n\n            if(user) {\n                db.collection('problems').doc(user.uid).set({});\n            }\n\n        });\n        return () => unregisterAuthObserver();\n    }, []);\n\n    if(loading) return <div>loading...</div>\n\n    if(usercur==null){\n        return <SignIn/>;\n    } else {\n        return<Contents uid = {usercur.uid}/>;\n    }\n}\n\nexport default App;","  \nimport {render} from \"react-dom\";\nimport App from \"./main/App\";\nimport \"bulma/css/bulma.css\";\n\nrender(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}