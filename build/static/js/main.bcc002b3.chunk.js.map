{"version":3,"sources":["firebase/index.js","firebase/config.js","components/signin.jsx","components/header.jsx","components/footer.jsx","main/api.js","components/card.jsx","components/problemset.jsx","components/form.jsx","components/main.jsx","main/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","functions","Timestamp","uiConfig","signInFlow","signInOptions","provider","EmailAuthProvider","PROVIDER_ID","requireDisplayName","SignIn","firebaseAuth","Header","className","Footer","href","target","TwitterIcon","size","round","EmailIcon","a","fetch","res","json","fetchUesrsSub","user_id","Card","props","background","array","sub","style","margin","backgroundColor","url","contest","title","diff","version","class","user","type","value","onClick","deleteTask","id","ProblemSet","resArray","filter","col","console","log","diffFilter","subFilter","map","key","Form","useState","problemUrl","setProblemUrl","problems","setProblems","setSubFilter","setDiffFilter","userName_tmp","userName","addProblem","tmp","slice","length","urlsplit","split","problem_Id_tmp","contest_tmp","Name_tmp","diff_tmp","sub_tmp","fetchPromInfo","then","url1s","fetchPromDiff","url2","url3","problem_id","result","problem_Obj","Math","max","unshift","alert","useEffect","collection","doc","uid","get","data","exists","dbData","undefined","set","catch","error","userNames","t","push","Set","t1","t2","t3","float","placeholder","onChange","e","onKeyPress","splice","Main","setUserName","localStorage","userName_localst","JSON","parse","userform","setItem","stringify","role","aria-label","Contents","App","loading","setloading","usercur","setusercur","unregisterAuthObserver","onAuthStateChanged","render","document","querySelector"],"mappings":"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","file":"static/js/main.bcc002b3.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firebase-firestore'\nimport 'firebase/firebase-functions'\nimport {firebaseConfig} from \"./config\";\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const functions = firebase.functions();\nexport const Firebasestamp = firebase.firestore.Timestamp;\n\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyB3hZLlsHCeIn_P4kOUJEPTTurPG9uq_JQ\",\n    authDomain: \"atcoderreminderv2.firebaseapp.com\",\n    databaseURL: \"https://atcoderreminderv2-default-rtdb.firebaseio.com\",\n    projectId: \"atcoderreminderv2\",\n    storageBucket: \"atcoderreminderv2.appspot.com\",\n    messagingSenderId: \"717880908898\",\n    appId: \"1:717880908898:web:94c8dc7c05861f291c053b\",\n    measurementId: \"G-1FRW7Q8DGS\"\n  };\n\n","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport {auth} from '../firebase/index.js';\nimport firebase from 'firebase';\n\n// Configure FirebaseUI.\nconst uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    signInOptions: [\n      {\n        provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        requireDisplayName: false\n      },\n    ],\n};\n\nfunction SignIn() {\n    return(\n        <div>\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n        </div>\n    );\n\n}\n\nexport default SignIn\n","function Header() {\n    return(\n        <div>\n            <header className=\"hero is-success is-bold\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title is-3\">\n                        AtCoder Reminder\n                     </h1>\n                 </div>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default Header;","import {\n    EmailIcon,\n    TwitterIcon\n} from 'react-share';\n\nfunction Footer() {\n    return(\n    <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n            <hr></hr>\n                <p>2021&copy;kumastry</p>\n              \n                \n     \n                <div className=\"columns  is-centered\">\n                    <div className=\"column  is-narrow  \">\n                        <a href=\"https://twitter.com/kumastry1\" target=\"_black\"><TwitterIcon size={48} round /></a>\n                    </div>\n                    \n                    <div className=\"column  is-narrow\">\n                        <a href=\"mailto:kumastry2212@gmail.com\"><EmailIcon size={48} round /></a>\n                    </div>\n                </div>\n        </div>\n    </footer>\n    );\n}\n\nexport default Footer;","export async function fetchPromInfo() {\n    const res = await fetch(\n        `https://kenkoooo.com/atcoder/resources/problems.json`\n    );\n\n    return await res.json();\n}\n\nexport async function fetchPromDiff() {\n    const res =  await fetch(\n        `https://kenkoooo.com/atcoder/resources/problem-models.json`\n    );\n\n    return await res.json();\n}\n\nexport async function fetchUesrsSub(user_id) {\n    const res = await fetch(\n        `https://kenkoooo.com/atcoder/atcoder-api/results?user=${user_id}`\n    );\n    return await res.json();\n}\n","function Card(props) {\n  \n    let background = '';\n    \n    if(props.array.sub === 'AC') {\n        background= \"#c8e4cc\";\n    } else if (props.array.sub !== 'nosub'){\n        background=\"#fcecbc\";\n    } else {\n        background=\"#ffffff\";\n    }\n\n    return(\n        <div className=\"card\" style={{ margin: \"8px\", backgroundColor:background,}}>\n            <div className=\"card-content\" >\n                <p className=\"title\">\n                    <a href = {props.array.url} target=\"_black\">\n\n                        {props.array.contest + \" \" +props.array.title}<br/>\n                        { \"diff:\" + props.array.diff + \" submission:\" + props.array.sub}<br/>\n                        {props.array.version}\n\n                    </a>\n                </p>\n\n                <p class=\"subtitle\">\n                    user:{props.array.user}\n                </p>\n\n                <footer className=\"card-footer\">\n                    {/* <input  type = \"button\" value = \"edit\" className=\"card-footer-item\" onClick ={() => props.editTask(key)}/> */}  \n                    <input  type = \"button\" value = \"delete\" className=\"card-footer-item\" onClick={() => props.deleteTask(props.id)} />\n                </footer>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import Card from './card';\n\nfunction ProblemSet(props) {\n    const tmp = props.array.filter((array) => {\n        let col = 'all';\n        if(array.diff < 400) {\n            col = 'gray';\n        } else if(array.diff < 800) {\n            col = 'brawn';\n        } else if(array.diff < 1200) {\n            col = 'green';\n        } else if(array.diff < 1600) {\n            col = 'cyan';\n        } else if(array.diff < 2000) {\n            col = 'blue';\n        } else if(array.diff < 2400) {\n            col = 'yellow';\n        } else if(array.diff < 2800) {\n            col = 'orange';\n        } else {\n            col = 'red';\n        } \n\n        console.log(col);\n        if(props.diffFilter === 'all') {\n            return true;\n        }\n        return props.diffFilter === col;\n    });\n\n\n    const resArray = tmp.filter((array) => {\n        let sub = 'all';\n        if(array.sub === 'AC') {\n            sub = 'AC';\n        } else if(array.sub === 'WA') {\n            sub = 'WA';\n        } else if(array.sub === 'nosub') {\n            sub = 'nosub';\n        }\n       \n        if(props.subFilter === 'all') {\n            return true;\n        }\n        return props.subFilter === sub;\n    });\n\n    return (\n        <div>\n            <div className=\"is-vertical-center\" >       \n                {resArray.map( (array, key) => {\n                    return array !== 'init'?<Card array={array} id ={key} deleteTask={props.deleteTask} /> :<p>loading...</p>\n                })}\n            </div>\n        </div>        \n    );\n}\n\nexport default ProblemSet;","import {useEffect, useState} from 'react';\nimport {fetchPromDiff, fetchPromInfo, fetchUesrsSub} from '../main/api';\nimport { db } from '../firebase';\nimport ProblemSet from './problemset';\n\nfunction Form(props) {\n    const [problemUrl, setProblemUrl] = useState('');\n    const [problems, setProblems] = useState(['init']);\n    const [subFilter, setSubFilter] = useState('all');\n    const [diffFilter, setDiffFilter] = useState('all');\n\n\n    let userName_tmp = props.userName;\n    useEffect (() => {\n       \n        const dataref = db.collection('problems').doc(props.uid);\n        dataref.get().then((doc) => {\n        \n            console.log(doc.data());\n            if(doc.exists) {\n                const dbData = doc.data();\n           \n                console.log(dbData.problems);\n                if(dbData.problems===undefined) {\n                    db.collection(\"problems\").doc(props.uid).set({})\n                } else  {\n                    console.log(dbData.problems);\n                    setProblems(dbData.problems);\n                }\n            } else {\n                console.log(\"no data\");\n            }\n        });\n    },[])\n\n    useEffect (() => {\n        if(problems[0] !== 'init') {\n            console.log(\"fff\")\n            db.collection(\"problems\").doc(props.uid).set({problems})\n            .then(() => {\n                console.log(problems);\n                console.log(\"Document written \");\n            })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n            });\n        }\n    },[problems])\n\n    function addProblem() {\n        let tmp = problems.slice(0, problems.length);\n        const urlsplit = problemUrl.split('/');\n        const problem_Id_tmp = urlsplit[urlsplit.length-1];\n        const contest_tmp = urlsplit[urlsplit.length-3];\n        let Name_tmp = '';\n        let diff_tmp = 0;\n        let sub_tmp = 'nosub';\n\n        fetchPromInfo().then((url1s) => {\n\n            url1s.map((url1s) => {\n                if(url1s.id === problem_Id_tmp) {\n                    Name_tmp = url1s.title;\n                }\n            });\n\n        }).then(() => {\n\n            if(Name_tmp !== '') {\n                fetchPromDiff().then((url2) => {\n                    diff_tmp = typeof(url2[problem_Id_tmp]) === 'undefined'?0:url2[problem_Id_tmp]['difficulty'];\n                } ).then(() => {\n                    fetchUesrsSub(userName_tmp).then((url3) => {\n                        url3.map((url3) => {\n                          \n                            if(url3.problem_id === problem_Id_tmp) {\n                                if(sub_tmp === 'nosub') {\n                                    sub_tmp = url3.result;\n                                } else if(sub_tmp !== 'AC' && url3.result === 'AC') {\n                                    sub_tmp = url3.result;\n                                } else if(sub_tmp !== 'AC') {\n                                    if(sub_tmp !== 'WA' && url3.result === 'WA') {\n                                        sub_tmp = url3.result;\n                                    } else if(sub_tmp !== 'TLE' && url3.result === 'TLE') {\n                                        sub_tmp = url3.result;\n                                    } else {\n                                        sub_tmp = url3.result;\n                                    }\n                                }\n                            }\n                        });\n\n                    }).then(() => {\n\n                        let userName_tmp = props.userName ===''?'no user':props.userName;\n                        const problem_Obj = {\n                            title:Name_tmp,\n                            url:problemUrl,\n                            diff:Math.max(diff_tmp, 0),\n                            problem_id:problem_Id_tmp,\n                            contest:contest_tmp,\n                            sub:sub_tmp,\n                            user:userName_tmp,\n                            version:0\n                        };\n\n                        tmp.unshift(problem_Obj);\n                        setProblems(tmp);\n                        \n                    });\n                });\n            } else {\n                alert(\"Problem Not Found\");\n            }\n        });\n\n        setProblemUrl('');\n    }\n\n    \n    function deleteTask(key) {\n        let tmp = problems.slice(0, problems.length);\n        tmp.splice(key, 1);\n        setProblems(tmp);\n    }\n\n    const reLoad = () => {\n        console.log(problems);\n        let userNames = [];\n        problems.map((t) => {\n            userNames.push(t.user);\n        });\n\n        userNames = [...new Set(userNames)];\n        let tmp = problems.slice(0, problems.length);;\n        \n        userNames.map((t1) => {\n            fetchUesrsSub(t1).then((data) => {\n            tmp.map((t2) => {\n                    data.map((t3) => {\n                        if(t2.problem_id === t3.problem_id) {\n                            t2.sub = t3.result;\n                            t2.version++;\n                        }\n                    })\n                })\n            })\n        })\n\n        setProblems(tmp);\n        console.log(problems);\n    }\n\n\n    return(\n        <div>\n            <main>\n\n\n            <section className=\"section\">\n\n                <button className=\"button\" onClick={reLoad} style={{float:\"left\" }}>\n                        <span class=\"icon\">\n                            <i class=\"fas fa-redo\"></i>\n                        </span>\n                        <span>Reload</span>\n                </button>\n\n\n                <input className=\"input\" \n                type=\"text\" \n                placeholder=\"Problem URL\" \n                value = {problemUrl} \n                onChange={(e) => setProblemUrl(e.target.value)} \n                onKeyPress={(e) => {e.key == 'Enter'?addProblem():\"\"}} \n                />\n\n                <button className=\"button is-fullwidth is-success is-light\" onClick={addProblem}>Add Problem</button>\n\n                <div className=\"select is-success is-active \">\n                    <select  onChange={(e) => setSubFilter(e.target.value)}>\n                        <option value='all' >submission-All</option>\n                        <option value='AC'>AC</option>\n                        <option value='WA'>WA</option>\n                        <option value='nosub'>Nosub</option>\n                    </select>\n                </div>\n\n          \n                <div className=\"select is-success is-active\">\n                    <select onChange={(e) => setDiffFilter(e.target.value)}>\n                        <option value='all'>diffculity-All</option>\n                        <option value='gray'>0-400</option>\n                        <option value='brawn'>400-800</option>\n                        <option value='green'>800-1200</option>\n                        <option value='cyan'>1200-1600</option>\n                        <option value='blue'>1600-2000</option>\n                        <option value='yellow'>2000-2400</option>\n                        <option value='orange'>2400-2800</option>\n                        <option value='red'>2800-∞</option>\n                    </select>\n                </div>\n\n\n               \n                <section className=\"section\">\n                    <ProblemSet array={problems} deleteTask={deleteTask} diffFilter = {diffFilter} subFilter={subFilter}/>\n                </section>\n            </section>\n            </main>\n        </div>\n    );\n}\n\nexport default Form;","import {useEffect, useState} from 'react';\nimport Form from './form';\n\nfunction Main(props) {\n    const [userName, setUserName] = useState('');\n\n    useEffect(() => {\n        if(localStorage.user) {\n            const userName_localst = JSON.parse(localStorage.user);\n            userform.value = userName_localst;\n            setUserName(userName_localst);\n        }\n    }, [])\n\n    useEffect (() => {\n        localStorage.setItem('user', JSON.stringify(userName));\n    },[userName])\n\n    return (\n        <div>\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main nabigation\">\n                <div className=\"navbar-brand\">\n                    <input className=\"navbar-item\" id = 'userform' value = {userName} onChange={e => setUserName(e.target.value)} type=\"text\" placeholder=\"Username\"></input>\n                </div>\n            </nav>\n            <Form userName = {userName} uid = {props.uid}/>\n        </div>\n    );\n}\n\nexport default Main;\n\n","import {useEffect, useState} from 'react';\nimport SignIn from '../components/signin';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport Main from '../components/main';\nimport {auth} from '../firebase';\n\n\n\nfunction Contents(props) {\n    return(\n        <>\n        <Header />\n        <Main uid={props.uid}/>\n        <Footer />\n        </>\n    );\n}\n\nfunction App() {\n    const [loading, setloading] = useState(true);\n    const [usercur, setusercur] = useState(null);\n\n    useEffect(() => {\n        const unregisterAuthObserver = auth.onAuthStateChanged(user => {\n            setloading(false);\n            setusercur(user);\n            console.log(user.uid);\n        });\n        return () => unregisterAuthObserver();\n    }, []);\n\n    if(loading) return <div>loading...</div>\n\n    if(usercur==null){\n        return <SignIn/>;\n    } else {\n        return<Contents uid = {usercur.uid}/>;\n    }\n}\n\nexport default App;","  \nimport {render} from \"react-dom\";\nimport App from \"./main/App\";\nimport \"bulma/css/bulma.css\";\n\nrender(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}